{"version":3,"sources":["src/banner.js","src/core.js","src/xfilter.js","src/nanocube-queries.js","src/fgb-queries.js","src/filter-handler.js","src/footer.js"],"names":[],"mappings":"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","file":"xfilter.js","sourcesContent":["(function() { function _xfilter() {\n'use strict';\n","xfilter.version = '0.2.2';\n\n","function xfilter(server) {\n    var _engine;\n    var _fields, _xform, _filters = {}, _groups = {}, _data, _group_id = 17;\n    var _start_time, _resolution; // in ms (since epoch for start)\n\n    function query_url(q) {\n        return server + '/' + q;\n    }\n\n    function create_group(dimension) {\n        var _id = _group_id++, _anchor = {id: _id, dimension: dimension, values: null, splitter: 'a'};\n        _groups[_id] = _anchor;\n        var group = {\n            categorical: function() {\n                // unclear how much engines will share impl\n                return this;\n            },\n            dispose: function() {\n                delete _groups[_id];\n                _anchor.values = null;\n                return this;\n            },\n            all: function() {\n                return _anchor.values;\n            }\n        };\n        if(xf.engine().augment_group)\n            group = xf.engine().augment_group(_anchor, group);\n        return group;\n    }\n\n    var xf = {};\n\n    xf.dimension = function(field) {\n        if(!Object.keys(_fields).length)\n            throw new Error('no schema (not started)');\n        if(!_fields[field])\n            throw new Error('field ' + field + ' not found in schema');\n\n        function toValues(v) {\n            if(!_xform[field])\n                return v;\n            if(v instanceof Array)\n                return v.map(toValues);\n            return _xform[field].to(v);\n        }\n\n        return {\n            filter: function(v) {\n                if(v !== null)\n                    throw new Error('unexpected non-null filter()');\n                delete _filters[field];\n                return this;\n            },\n            filterExact: function(val) {\n                val = toValues(val);\n                _filters[field] = {type: 'set', target: [val]};\n                return this;\n            },\n            filterMultiple: function(vals) { // not in ordinary crossfilter\n                vals = toValues(vals);\n                _filters[field] = {type: 'set', target: vals};\n                return this;\n            },\n            filterRange: function(range) {\n                range = toValues(range);\n                _filters[field] = {type: 'interval', target: range};\n                return this;\n            },\n            filterFunction: function() {\n                throw new Error('filter functions not allowed');\n            },\n            dispose: function() {\n                this.filter(null);\n                return this;\n            },\n            group: function() {\n                return create_group(field);\n            }\n        };\n    };\n\n    function validate(data) {\n        function expect() {\n            var d = data;\n            for(var i = 0; i < arguments.length; ++i) {\n                if(!d[arguments[i]]) {\n                    console.log('expected data.' + Array.prototype.slice.call(arguments, 0, i).join('.'));\n                    return false;\n                }\n                d = d[arguments[i]];\n            }\n            return true;\n        }\n        expect('layers');\n        expect('root', 'children');\n    }\n\n    function key_ascending(a, b) { // adapted from d3.ascending\n        return a.key < b.key ? -1 : a.key > b.key ? 1 : a.key >= b.key ? 0 : NaN;\n    }\n\n    xf.commit = function() {\n        var ids = Object.keys(_groups), qs = [];\n        for(var id in _groups)\n            qs.push(xf.engine().do_query(query_url, _filters, _groups[id]));\n        return Promise.all(qs).then(function(results) {\n            if(results.length !== qs.length)\n                throw new Error('unexpected number of results ' + results.length);\n\n            for(var i = 0; i < results.length; ++i) {\n                var result = results[i],\n                    id = ids[i],\n                    group = _groups[id],\n                    xform = _xform[group.dimension];\n                group.values = xf.engine()\n                    .unpack_result(result)\n                    .sort(key_ascending)\n                    .map(function(kv) {\n                        return {key: xform ? xform.fro(kv.key) : kv.key, value: kv.value};\n                    });\n            }\n            if(validate(result))\n                _data = result;\n            return results;\n        });\n    };\n\n    xf.engine = function(_) {\n        if(!arguments.length)\n            return _engine;\n        _engine = _;\n        return xf;\n    };\n\n    xf.start = function() {\n        return xf.engine().fetch_schema(query_url).then(function(result) {\n            ({fields: _fields, xform: _xform} = result);\n            _xform = _xform || {};\n        });\n    };\n\n    return xf;\n}\n","xfilter.nanocube_queries = function() {\n    var _start_time, _resolution;\n    function ms_mult(suffix) {\n        var mult = 1;\n        switch(suffix) {\n        case 'w': mult *= 7;\n        case 'd': mult *= 24;\n        case 'h': mult *= 60;\n        case 'm': mult *= 60;\n        case 's': return mult*1000;\n        default: return NaN;\n        }\n    }\n    return {\n        do_query: function(query_url, filters, group) {\n            var parts = ['count'];\n            for(var f in filters) {\n                if(group && group.dimension === f)\n                    continue;\n                var filter;\n                switch(filters[f].type) {\n                case 'set':\n                    filter = 'set(' + filters[f].target.join(',') + ')';\n                    break;\n                case 'interval':\n                    filter = 'interval(' + filters[f].target.join(',') + ')';\n                    break;\n                }\n                parts.push('.r(\"' + f + '\",' + filter + ')');\n            }\n            if(group.print)\n                parts.push('.' + group.splitter + '(\"' + group.dimension + '\",' + group.print() + ')');\n            return d3.json(query_url(parts.join('')));\n        },\n        unpack_result: function(result) {\n            return result.root.children.map(function(pv) {\n                return {key: pv.path[0], value: pv.val};\n            });\n        },\n        fetch_schema: function(query_url) {\n            return d3.json(query_url('schema')).then(function(schema) {\n                var fields = {}, xform = {};\n                schema.fields.forEach(function(f) {\n                    fields[f.name] = f;\n                    if(/^nc_dim_cat_/.test(f.type)) {\n                        var vn = [];\n                        for(var vname in f.valnames)\n                            vn[f.valnames[vname]] = vname;\n                        xform[f.name] = {\n                            to: function(v) {\n                                return f.valnames[v];\n                            },\n                            fro: function(v) {\n                                return vn[v] || 'foo';\n                            }\n                        };\n                    }\n                    else if(/^nc_dim_time_/.test(f.type)) {\n                        xform[f.name] = {\n                            to: function(v) {\n                                return Math.round((v.getTime() - _start_time)/_resolution);\n                            },\n                            fro: function(v) {\n                                return new Date(_start_time + v * _resolution);\n                            }\n                        };\n                    }\n                });\n                schema.metadata.forEach(function(m) {\n                    if(m.key === 'tbin') {\n                        var parts = m.value.split('_');\n                        _start_time = Date.parse(parts[0] + ' ' + parts[1]);\n                        var match;\n                        if((match = /^([0-9]+)([a-z]+)$/.exec(parts[2]))) {\n                            var mult = ms_mult(match[2]);\n                            _resolution = +match[1] * mult;\n                        }\n                    }\n                });\n                return {fields, xform};\n            });\n        },\n        augment_group: function(anchor, group) {\n            function arg_printer(name /* ... */) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                return function() {\n                    return name + '(' + args.map(JSON.stringify).join(',') + ')';\n                };\n            }\n            return Object.assign({}, group, {\n                dive: function(bins, depth) {\n                    anchor.print = arg_printer('dive', bins, depth);\n                    anchor.splitter = 'a';\n                    return this;\n                },\n                // native interface\n                mt_interval_sequence: function(start, binwid, len) { // ints\n                    anchor.print = arg_printer('mt_interval_sequence', start, binwid, len);\n                    anchor.splitter = 'r';\n                    return this;\n                },\n                // somewhat nicer interface\n                time: function(start, binwid, len) { // Date, ms, number\n                    start = start ? start.getTime() : _start_time;\n                    binwid = binwid || _resolution;\n                    len = len || 10*365;\n                    var startb = (start - _start_time)/_resolution,\n                        widb = binwid/_resolution;\n                    return this.mt_interval_sequence(startb, widb, len);\n                },\n                categorical: function() {\n                    group.categorical();\n                    return this.dive([], 1);\n                }\n            });\n        }\n    };\n};\n","xfilter.fgb_queries = function() {\n    return {\n        do_query: function(query_url, filters, group) {\n            var query = {\n                filter: {},\n                groupby: [group.dimension]\n            };\n            for(var f in filters) {\n                if(group && group.dimension === f)\n                    continue;\n                if(filters[f].type !== 'set')\n                    throw new Error(\"don't know how to handle filter type \" + filters[f].type);\n                query.filter[f] = filters[f].target;\n            }\n            return d3.json(query_url('query'), {\n                method: 'POST',\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\"\n                },\n                body: JSON.stringify(query)\n            });\n        },\n        unpack_result: function(result) {\n            return result.map(function(pair) {\n                return {key: pair[0], value: pair[1]};\n            });\n        },\n        fetch_schema: function(query_url) {\n            return d3.text(query_url('')).then(function(s) {\n                var i = s.indexOf(' ');\n                var count = +s.slice(0, i),\n                    columns = JSON.parse(s.slice(i+1).replace(/'/g, '\"'));\n                return {\n                    fields: columns.reduce(function(p, v) {\n                        p[v] = true;\n                        return p;\n                    }, {}),\n                    xform: {}\n                };\n            });\n        }\n    };\n};\n","// define our own filter handler to avoid the dreaded filterFunction\nxfilter.filter_handler = function (dimension, filters) {\n    if (filters.length === 0) {\n        dimension.filter(null);\n    } else if (filters.length === 1 && !filters[0].isFiltered) {\n        // single value and not a function-based filter\n        dimension.filterExact(filters[0]);\n    } else if (filters.length === 1 && filters[0].filterType === 'RangedFilter') {\n        // single range-based filter\n        dimension.filterRange(filters[0]);\n    } else {\n        // this is the case changed from core dc.js\n        // filterMultiple does not exist in crossfilter\n        dimension.filterMultiple(filters);\n    }\n    return filters;\n};\n\n","return xfilter;\n}\n    if (typeof define === 'function' && define.amd) {\n        define([], _xfilter);\n    } else if (typeof module == \"object\" && module.exports) {\n        module.exports = _xfilter();\n    } else {\n        this.xfilter = _xfilter();\n    }\n}\n)();\n"]}